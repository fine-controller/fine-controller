name: build

env:
  NAME: fine-kube-operator

on:

  workflow_dispatch:

  push:
    branches:
      - main
      - develop

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:

      - name: Code checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Current Time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY.MM.DD.HHmm
          utcOffset: "+00:00"

      - name: Set Vars
        uses: trevorlloydelliott/set-environment-variables@v1.0.0
        with:
          REGISTRY_IMAGE: fortunen/${{ env.NAME }}
          BUILD_NUMBER: ${{ steps.current-time.outputs.formattedTime }}
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install Coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Analyze using SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /o:"${{ env.NAME }}" /k:"${{ env.NAME }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build and push image
        if: github.ref_name == 'main'
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u fortunen --password-stdin
          docker build . --build-arg BUILD_NUMBER=${{ env.BUILD_NUMBER }} --tag ${{ env.REGISTRY_IMAGE }}:latest --tag ${{ env.REGISTRY_IMAGE }}:${{ env.BUILD_NUMBER }}
          docker image push --all-tags ${{ env.REGISTRY_IMAGE }}
          curl -o ./docker-pushrm https://github.com/christian-korneck/docker-pushrm/releases/download/v1.9.0/docker-pushrm_linux_amd64 
          chmod +x ./docker-pushrm
          ./docker-pushrm ${{ env.REGISTRY_IMAGE }} --file README.md